<big><big> Documentation for the FIDS directory </big></big><br>Contents: automaticly generated doucmentation <br>Filename: fids.doc <br>Creation date: 04-Jun-2004 <br><br><br> <big><big> Contents </big></big> <br><a href="#ref1">General Description</a><br><a href="#ref2">fidsAddFiducial</a><br><a href="#ref3">fidsAverage</a><br><a href="#ref4">fidsFindFids</a><br><a href="#ref5">fidsFindGlobalFids</a><br><a href="#ref6">fidsFindLocalFids</a><br><a href="#ref7">fidsGetAllFids</a><br><a href="#ref8">fidsGetAllGlobalFids</a><br><a href="#ref9">fidsGetFids</a><br><a href="#ref10">fidsGetGlobalFids</a><br><a href="#ref11">fidsGetLocalFids</a><br><a href="#ref12">fidsIntAll</a><br><a href="#ref13">fidsIntQRS</a><br><a href="#ref14">fidsIntQRST</a><br><a href="#ref15">fidsIntST</a><br><a href="#ref16">fidsIntST80</a><br><a href="#ref17">fidsIntSTT</a><br><a href="#ref18">fidsIntegralMap</a><br><a href="#ref19">fidsIntegrate</a><br><a href="#ref20">fidsListFids</a><br><a href="#ref21">fidsMIntegrate</a><br><a href="#ref22">fidsRemoveFiducial</a><br><a href="#ref23">fidsShiftFids</a><br><a href="#ref24">fidsType</a><br><a href="#ref25">fidsUpdateFids</a><br><br><br><a name="ref1"></a><big><big>General Description</big></big><br><pre>README.txt/ fids directory

NOTES ON FIDS/FIDSET-structure and functions

In this directory all functions are stored for manipulating the fids and fidset structures in the
TS (timeseries) data. The data is stored in this array differs in a few ways from the data stored
in the container files and in Everett. In Everett all fiducials are grouped into sets called fidsets.
These fidsets contain all the fiducials themselves. In the matlab implementation, a different approach
is chosen: all fiducials are put in one array. In order to be compatible and to be able to write back
the fiducicals to a TSDFC-file, for each fiducial an index in the fidset cellarray is stored. This
array merely stores the information on where a fiducial came from. Both fiducial set labels and audit
strings are stored here. The audit strings are not updated by the programs. In addition fiducials
deriving from TSDF or FIDS-files are stored in these arrays as well, they are stored in a new fidset.
The reason for putting everything on one heap is that it allows for easier searching for fiducials.

Fiducials have a type associated as well, this type is stored for each individual fiducial in the array.
The fidtype consists of a number that is compatible with Everett. However to ease the use, you can put
a description of the fiducial in functions wanting a type. This fiducialname is translated using fidsType.
See in the help of fidsType for all names supported. The list can be extended on demand and is hardcoded
into the matlab code.

New fiducials can be created in the list. If you leave the fidset field at zero a new fidset will be 
created for all the fiducials not in a fidset. This one will be marked as being generated by matlab
and be compatible with Everett. Feel free to define your own fidset, normally only the label and audit
(string) will be used for writing back in a new tsdfc-entry. Leaving empty spots in the fidset array
does not harm the writeback process. If a fidset entry is empty and it is referred to, a new fidset
will be created. (A statement will be supplied in the auditstring of the conversion proces).

Both local and global fiducials are allowed. Take care that local fiducials should have the same number of
channels as the data. Upon loading the fiducials they will be checked for this property and invalid sets 
will be discarded upon loading.  
</pre><a name="ref2"></a><br><big><big>fidsAddFiducial</big></big><br><br><pre>  FUNCTION fidsAddFiducial(TSindices,fidvalue,fidtype,[fidset])
  OR       TSdata = fidsAddFiducial(TSdata,fidvalue,fidtype,[fidset])
 
  DESCRIPTION
  This function adds a fiducial to a timeseries.
 
  INPUT
  TSindices         Index numbers into the TS cell-array
  TSdata            TS cell-array or TS-structure 
  fidvalue          Value of the new fiducial
  fidtype           Type of the fiducial (strinf or number)
  [fidset]          To which fidset this fiducial belongs (default: matlab generated fiducials)
 
  OUTPUT
  TSdata            In case of direct data access the data is returned with
                    the new fiducial added
 
  SEE ALSO fidsType
</pre><a name="ref3"></a><br><big><big>fidsAverage</big></big><br><br><pre>  FUNCTION TSindexmap = fidsAverage(TSindices,startframe,endframe)
 
  THIS FUNCTION HAS BECOME OBSOLETE/ IT IS STILL HERE FOR COMPATIBILITY
  USE fidsIntegralMap INSTEAD
 
  DESCRIPTION
   This function averages over a number of frames in the timeseries dataset.
   It starts at framestart and ends at frameend. The framestart and frameend
   may be real-numbers in which case they are rounded to the nearest frame
 
  INPUT 
   TSindices    the data or Datasets that need integration
   startframe   the frame for the integration to start, cellarray for multiple timeseries
   endframe     the frame at which to end, cellarray for multiple timeseries
 
  OUTPUT
   TSindexmap	an index to where the map is stored. In case multiple TS series
              	were supplied, each integral map is stored in a frame of the output
               	The frames are sorted in the way they are supplied in the vector
 	       	The leadinformation is taken from the first TS and the other TSs are
               	assumed to be equal to the first one, in respect to the lead ordering
 
  SEE fidsIntegrate
</pre><a name="ref4"></a><br><big><big>fidsFindFids</big></big><br><br><pre>  FUNCTION values = fidsFindFids(TSindex,type,[fidset])
  OR       values = fidsFindFids(TSdata,type,[fidset])
 
  DESCRIPTION
  Finds fiducials in a time series. For finding only local/global fiducials
  use fidsFindLocalFids/fidsFindGlobalFids. A local fiducial has an entry for each
  channel, whereas a global one has only one fiducial for all channels.
 
  INPUT
  TSindex       The index into the TS cell array that contains the data
  TSdata        A struct or cell-array containing the data
  type          The type of fiducial
  fidset        The fidset to search in
 
  OUTPUT
  value         A [1xm] vector for global fiducials or a [nxm] matrix in
                case local fiducials are defined as well
 
  SEE ALSO fidsType fidsFindGlobalFids fidsFindLocalFids
</pre><a name="ref5"></a><br><big><big>fidsFindGlobalFids</big></big><br><br><pre>  FUNCTION values = fidsFindGlobalFids(TSindex,type,[fidset])
  OR       values = fidsFindGlobalFids(TSdata,type,[fidset])
 
  DESCRIPTION
  Finds fiducials in a time series
 
  INPUT
  TSindex       The index into the TS cell array that contains the data
  TSdata        A struct or cell-array containing the data
  type          The type of fiducial
  fidset        The fidset to search in
 
  OUTPUT
  value         A [1xm] vector with global fiducials 
 
  SEE ALSO fidsType
</pre><a name="ref6"></a><br><big><big>fidsFindLocalFids</big></big><br><br><pre>  FUNCTION values = fidsFindLocalFids(TSindex,type,[fidset])
  OR       values = fidsFindLocalFids(TSdata,type,[fidset])
 
  DESCRIPTION
  Find local fiducials in a time series
 
  INPUT
  TSindex       The index into the TS cell array that contains the data
  TSdata        A struct or cell-array containing the data
  type          The type of fiducial
  fidset        The fidset to search in
 
  OUTPUT
  value         A [1xm] vector for global fiducials or a [nxm] matrix in
                case local fiducials are defined as well
 
  SEE ALSO fidsType
</pre><a name="ref7"></a><br><big><big>fidsGetAllFids</big></big><br><br><pre>  FUNCTION values = fidsGetAllFids(TSindex,type,[fidset])
 
  THIS FUNCTION IS OBSOLETE AND WILL BE DELETED USE fidsFindFids INSTEAD
 
  DESCRIPTION
  Get the fiducials out of the fids information in the TS-structure. The function supports
  both local and global fiducials. In order to support both, this function returns a cell
  array (whereas fidsGetLocalFids and fidsGetGlobalFids, return just a matrix). This function
  gets all fiducials from one timeseries that meet the condition. Use fidsGetFids to process
  more than one timeseries.
 
 
  INPUT
  TSindices	The index to one timeseries. 
  type		The  type of fiducial your are looking for.
 		This can be either a string or a number specifying the type
  fidset	The fiducial sets that should be examined
 
  OUTPUT
  values	Cell array containing the first entry that matches the input
                parameters in case of multiple timeseries and all that match in
                case of single timeseries
 
  SEE ALSO fidsGetLocalFids fidsGetGlobalFids fidsGetFids
</pre><a name="ref8"></a><br><big><big>fidsGetAllGlobalFids</big></big><br><br><pre>  function values = fidsGetAllGlobalFids(TSindices,type)
 
  THIS FUNCTION IS OBSOLETE AND WILL BE DELETED USE fidsFindFids INSTEAD
 
  DESCRIPTION
   Get global fiducials out of the fids information in the TS-structure. The function
   returns only the first fiducial that meets the specification in "type" and "fidset"
   It returns a vector in which each element represents a fiducial in the fids structure
   of the succesive TSindices. Note that type and fidset may be entered as strings,
   specifying the type (see fidsType) or the label of the fidset respectively. 
 
  INPUT
   TSindex	The indices to the timeseries. In vectorised mode, the function
            will only read the first fiducial from each timeseries.
   type		The  type of fiducial your are looking for.
 		    This can be either a string or a number specifying the type
 
  OUTPUT
   values	numeric array containing the first entry that matches the input
                parameters, or NaN if none is found 
 
  SEE ALSO fidsGetLocalFids, fidsGetFids, fidsType 
</pre><a name="ref9"></a><br><big><big>fidsGetFids</big></big><br><br><pre>  function values = fidsGetFids(TSindices,type,[fidset])
 
  THIS FUNCTION IS OBSOLETE AND WILL BE DELETED USE fidsFindFids INSTEAD
 
  DESCRIPTION
  Get the fiducials out of the fids information in the TS-structure. The function supports
  both local and global fiducials. In order to support both, this function returns a cell
  array (whereas fidsGetLocalFids and fidsGetGlobalFids, return just a matrix). This function
  gets the first one that meets the condition. In order to get all fiducials use fidsGetAllFids.
 
 
  INPUT
  TSindices	The indices to the timeseries. In vectorised mode, the function
                will only read the first fiducial from each timeseries.
  type		The  type of fiducial your are looking for.
 		This can be either a string or a number specifying the type
  fidset	The fiducial sets that should be examined
 
  OUTPUT
  values	Cell array containing the first entry that matches the input
                parameters in case of multiple timeseries and all that match in
                case of single timeseries
 
  SEE ALSO fidsGetLocalFids fidsGetGlobalFids fidsgetAllFids
</pre><a name="ref10"></a><br><big><big>fidsGetGlobalFids</big></big><br><br><pre>  function values = fidsGetGlobalFids(TSindices,type,[fidset])
 
  DESCRIPTION
   Get global fiducials out of the fids information in the TS-structure. The function
   returns only the first fiducial that meets the specification in "type" and "fidset"
   It returns a vector in which each element represents a fiducial in the fids structure
   of the succesive TSindices. Note that type and fidset may be entered as strings,
   specifying the type (see fidsType) or the label of the fidset respectively. 
 
  INPUT
   TSindices	The indices to the timeseries. In vectorised mode, the function
                will only read the first fiducial from each timeseries.
   type		The  type of fiducial your are looking for.
 		This can be either a string or a number specifying the type
   fidset	The fiducial sets that should be examined or label of the fidset.
 
  OUTPUT
   values	numeric array containing the first entry that matches the input
                parameters, or NaN if none is found 
 
  SEE ALSO fidsGetLocalFids, fidsGetFids, fidsType 
</pre><a name="ref11"></a><br><big><big>fidsGetLocalFids</big></big><br><br><pre>  function values = fidsGetLocalFids(TSindices,type,[fidset])
 
  THIS FUNCTION IS OBSOLETE AND WILL BE DELETED USE fidsFindFids INSTEAD
 
  DESCRIPTION
   Get local fiducials out of the fids information in the TS-structure. The function
   returns only the first fiducial vector that meets the specification in "type" and "fidset"
   It returns a matrix in which each element represents a fiducial in the fids structure
   of the succesive TSindices. Note that type and fidset may be entered as strings,
   specifying the type (see fidsType) or the label of the fidset respectively. 
   To classify as a localset the number of leads should equal the number of entries in the
   fids array.
 
  INPUT
   TSindices	The indices to the timeseries. In vectorised mode, the function
                will only read the first fiducial from each timeseries.
   type		The  type of fiducial your are looking for.
 		This can be either a string or a number specifying the type
   fidset	The fiducial sets that should be examined or label of the fidset.
 
  OUTPUT
   values	numeric matrix containing the first entry that matches the input
                parameters, or a NaN-vecotr if none is found. 
 
  SEE ALSO fidsGetGlobalFids, fidsGetFids, fidsType 
</pre><a name="ref12"></a><br><big><big>fidsIntAll</big></big><br><br><pre>  FUNCTION TSmapindices = fidsIntAll(TSindices)
 
  DESCRIPTION
  This function integrates the timeseries indicated in the TSindices vector
  and puts them all in a new map. The new maps will be put in one new 
  timeseries entry in which each frame represents a integralmap. The maps
  are in the order of which the indices are read. Normally using ioReadTS
  the files are sorted in alphabetical order if you use wildcards. 
 
  INPUT
  TSindices    The indices in the TS-structure
 
  OUTPUT
  TSmapindices   The index on where to find the newly generated maps
 
  NOTE
  If multiple QRS/T starts and endings are defined only the first one is used
 
  SEE ALSO fidsIntST fidsIntSTT fidsIntST80 fidsIntQRS fidsIntQRST
</pre><a name="ref13"></a><br><big><big>fidsIntQRS</big></big><br><br><pre>  FUNCTION TSmapindex = fidsIntQRS(TSindices)
  OR       TSmapdata = fidsIntQRS(TSdata)
 
  DESCRIPTION
  This function integrates the timeseries indicated in the TSindices vector
  and puts them all in a new map. The new maps will be put in one new 
  timeseries entry in which each frame represents a integralmap. The maps
  are in the order of which the indices are read. Normally using ioReadTS
  the files are sorted in alphabetical order if you use wildcards. 
 
  INPUT
  TSindices    The indices in the TS-structure
  TSdata       Direct input of the Timeseries data (no index)
 
  OUTPUT
  TSmapindex   The index on where to find the newly generated map
  TSmapdata    Direct output of the integralmap
 
  NOTE
  If multiple QRS/T starts and endings are defined only the first one is used
 
  SEE ALSO fidsIntST fidsIntSTT fidsIntST80 fidsIntQRS fidsIntQRST
</pre><a name="ref14"></a><br><big><big>fidsIntQRST</big></big><br><br><pre>  FUNCTION TSmapindex = fidsIntQRST(TSindices)
  OR       TSmapdata = fidsIntQRST(TSdata)
 
  DESCRIPTION
  This function integrates the timeseries indicated in the TSindices vector
  and puts them all in a new map. The new maps will be put in one new 
  timeseries entry in which each frame represents a integralmap. The maps
  are in the order of which the indices are read. Normally using ioReadTS
  the files are sorted in alphabetical order if you use wildcards. 
 
  INPUT
  TSindices    The indices in the TS-structure
  TSdata       Direct input of the Timeseries data (no index)
 
  OUTPUT
  TSmapindex   The index on where to find the newly generated map
  TSmapdata    Direct output of the integralmap
 
  NOTE
  If multiple QRS/T starts and endings are defined only the first one is used
 
  SEE ALSO fidsIntST fidsIntSTT fidsIntST80 fidsIntQRS fidsIntQRST
</pre><a name="ref15"></a><br><big><big>fidsIntST</big></big><br><br><pre>  FUNCTION TSmapindex = fidsIntST(TSindices)
  OR       TSmapdata = fidsIntST(TSdata)
 
  DESCRIPTION
  This function integrates the timeseries indicated in the TSindices vector
  and puts them all in a new map. The new maps will be put in one new 
  timeseries entry in which each frame represents a integralmap. The maps
  are in the order of which the indices are read. Normally using ioReadTS
  the files are sorted in alphabetical order if you use wildcards. 
 
  INPUT
  TSindices    The indices in the TS-structure
  TSdata       Direct input of the Timeseries data (no index)
 
  OUTPUT
  TSmapindex   The index on where to find the newly generated map
  TSmapdata    Direct output of the integralmap
 
  NOTE
  If multiple QRS/T starts and endings are defined only the first one is used
 
  SEE ALSO fidsIntST fidsIntSTT fidsIntST80 fidsIntQRS fidsIntQRST
</pre><a name="ref16"></a><br><big><big>fidsIntST80</big></big><br><br><pre>  FUNCTION TSmapindex = fidsIntST80(TSindices)
  OR       TSmapdata = fidsIntST80(TSdata)
 
  DESCRIPTION
  This function integrates the timeseries indicated in the TSindices vector
  and puts them all in a new map. The new maps will be put in one new 
  timeseries entry in which each frame represents a integralmap. The maps
  are in the order of which the indices are read. Normally using ioReadTS
  the files are sorted in alphabetical order if you use wildcards. 
 
  INPUT
  TSindices    The indices in the TS-structure
  TSdata       Direct input of the Timeseries data (no index)
 
  OUTPUT
  TSmapindex   The index on where to find the newly generated map
  TSmapdata    Direct output of the integralmap
 
  NOTE
  If multiple QRS/T starts and endings are defined only the first one is used
 
  SEE ALSO fidsIntST fidsIntSTT fidsIntST80 fidsIntQRS fidsIntQRST
</pre><a name="ref17"></a><br><big><big>fidsIntSTT</big></big><br><br><pre>  FUNCTION TSmapindex = fidsIntQRST(TSindices)
  OR       TSmapdata = fidsIntQRST(TSdata)
 
  DESCRIPTION
  This function integrates the timeseries indicated in the TSindices vector
  and puts them all in a new map. The new maps will be put in one new 
  timeseries entry in which each frame represents a integralmap. The maps
  are in the order of which the indices are read. Normally using ioReadTS
  the files are sorted in alphabetical order if you use wildcards. 
 
  INPUT
  TSindices    The indices in the TS-structure
  TSdata       Direct input of the Timeseries data (no index)
 
  OUTPUT
  TSmapindex   The index on where to find the newly generated map
  TSmapdata    Direct output of the integralmap
 
  NOTE
  If multiple QRS/T starts and endings are defined only the first one is used
 
  SEE ALSO fidsIntST fidsIntSTT fidsIntST80 fidsIntQRS fidsIntQRST
</pre><a name="ref18"></a><br><big><big>fidsIntegralMap</big></big><br><br><pre>  FUNCTION TSmapindex = fidsIntegralMap(TSmapindex,TSindices,startframe,endframe,['average'])
  OR       TSmapdata  = fidsIntegralMap(TSmapdata,TSdata,startframe,endframe,['average'])
 
  DESCRIPTION
  This function adds integralmaps at the end of a TS-structure that already contains some
  integral-maps or creates a new one.
 
  INPUT
  TSmapindex        An index into the TS-array, pointing to the TS-structure where the
                    maps have to be stored (could be an empty initialised TS-structure)
  TSindices         Indices into the TS-array of the time data that needs to be integrated
  TSmapdata         Similar to TSmapindex, but now the data is directly put on the input
  TSdata            Similar to TSindices, but now the data is directly put on the input
  startframe        frame number of where to start the integration
  endframe          frame number of where to end the integration
 
  OUTPUT
  TSmapindex
    /TSmapdata      Output of the adjusted data 
 
 
</pre><a name="ref19"></a><br><big><big>fidsIntegrate</big></big><br><br><pre>  FUNCTION TSindexmap = fidsIntegrate(TSindices,startframe,endframe)
  OR       TSdatamap  = fidsIntegrate(TSdata,startframe,endframe)
 
  THIS FUNCTION HAS BECOME OBSOLETE USE fidsIntegralMap INSTEAD
 
  DESCRIPTION
  This function integrates all leads in the in the timeseries dataset.
  It starts at framestart and ends at frameend. The framestart and frameend
  may be real-numbers in which case they are rounded to the nearest frame.
 
 
 
  INPUT 
  TSindices     the data or Datasets that need integration
  startframe    the frame for the integration to start, cellarray for multiple timeseries
  endframe      the frame at which to end, cellarray for multiple timeseries
 
  OUTPUT
  TSindexmap	an index to where the map is stored. In case multiple TS series
              	were supplied, each integral map is stored in a frame of the output
               	The frames are sorted in the way they are supplied in the vector
 	       	The leadinformation is taken from the first TS and the other TSs are
               	assumed to be equal to the first one, in respect to the lead ordering
 
  SEE ALSO      fidsIntQRS fidsIntST fidsIntSTT fidsIntST80 fidsIntQRST
</pre><a name="ref20"></a><br><big><big>fidsListFids</big></big><br><br><pre>  FUNCTION fidsListFids(TSindex)
  OR       fidsListFids(TSdata)
 
  DESCRIPTION
  List the fiducials in a time series on screen
 
  INPUT
  TSindex       The index into the TS cell array that contains the data
  TSdata        A struct or cell-array containing the data
 
  OUTPUT
  -
 
  SEE ALSO fidsType
</pre><a name="ref21"></a><br><big><big>fidsMIntegrate</big></big><br><br><pre>  FUNCTION TSindexmap = fidsMIntegrate(TSindex,startframe,endframe)
  
  FUNCTION HAS BECOME OBSOLETE, USE fidsIntegralMap INSTEAD
 
  DESCRIPTION
  This function integrates over all leads in the in the timeseries dataset.
  It starts at framestart and ends at frameend. The framestart and frameend
  may be real-numbers in which case they are rounded to the nearest frame.
  In this function start and end can be vectors specifying multiple
  integrals
 
  INPUT 
  TSindices     the data or Datasets that need integration
  startframe    the frame for the integration to start, cellarray for multiple timeseries
  endframe      the frame at which to end, cellarray for multiple timeseries
 
  OUTPUT
  TSindexmap	an index to where the map is stored. In case multiple TS series
              	were supplied, each integral map is stored in a frame of the output
               	The frames are sorted in the way they are supplied in the vector
 	       	The leadinformation is taken from the first TS and the other TSs are
               	assumed to be equal to the first one, in respect to the lead ordering
 
  SEE ALSO fidsIntQRS fidsIntST fidsIntSTT fidsIntST80 fidsIntQRST
</pre><a name="ref22"></a><br><big><big>fidsRemoveFiducial</big></big><br><br><pre>  FUNCTION fidsRemoveFiducial(TSindices,fidtype)
  OR       TSdata = fidsRemoveFiducial(TSdata,fidtype)
 
  DESCRIPTION
  This function adds a fiducial to a timeseries.
 
  INPUT
  TSindices         Index numbers into the TS cell-array
  TSdata            TS cell-array or TS-structure 
  fidtype           Type of the fiducial (strinf or number)
 
  OUTPUT
  TSdata            In case of direct data access the data is returned with
                    the new fiducial added
 
  SEE ALSO fidsType
</pre><a name="ref23"></a><br><big><big>fidsShiftFids</big></big><br><br><pre>  FUNCTION fidsShiftFids(TSindices,shift)
 
  DESCRIPTION 
  This function shifts all the fiducials in a TS set.
  This operation is for instance necessary when slicing
  data.
 
  INPUT
  TSindices      The indices to the TS structure
  shift          The shift in the fiducial value
 
  OUTPUT
  -
 
  SEE ALSO
</pre><a name="ref24"></a><br><big><big>fidsType</big></big><br><br><pre>  FUNCTION fidtype = fidsType(typestr)
  OR       typestr  = fidsType(fidtype)
 
  DESCRIPTION
   this function translates the string describing the type of a fiducial in its
   corresponding number (or vice versa). In the TSDFC file format fiducials are 
   stored with a type the type is a number which corresponds to a certain time interval. 
   In order to ease the matlab programming, they are define as strings as well. So 
   entering a string will lead to an automatic translation. The translation of each string
   is accomplished by means of this function.
 
  INPUT
   typestr		A string describing the type, see TYPES
 
  OUTPUT
   fidtype		The corresponding number to the fiducial description
                        or -1 if the string could not be identified 
 
  TYPES
   The fids descriptions should match one of the following strings (case insensitive)
   pon,pstart,
   pend,poff, 
   qon,qrson,qrsstart,
   rpeak,qrspeak,
   soff,qrsend,qrsoff,
   stoff,tstart,ton,
   tpeak,
   toff,tend,
   act, actplus, actminus,
   rec, recplus, recminus,
   ref,reference,
   jpt,
   baseline	
   pacing
 
   The list may not be complete, so all additions are welcome
 
  SEE ALSO
</pre><a name="ref25"></a><br><big><big>fidsUpdateFids</big></big><br><br><pre>  FUNCTION fidsUpdateFids(TSindices,leadmap,[framemap])
        or fidsUpdateFids(TSindices,options)
        or data = fidsUpdateFids(data,options)
 
  DESCRIPTION
  This function checks the integrity of the fiducials.
  Only allowing global (length=1) or local fiducial (length=numleads)
  On other configurations the function will fail. As well remapping 
  options are build in and the fiducials will be corrected for this.
  In case no TSDF-data is loaded, the function will check whether only 
  two lengths of fiducias are present, assuming local fiducials to
  have a length other than one, but all need to be the same as they 
  correspond to the same dataset.
  In case of frame renumbering the fiducials will be checked. Any fiducials
  that are out of range will be removed as integrals based on them will not
  be valid. The latter check is only performed in case a number of frames is
  specified, so you will be allowed to load fidsets only
 
  INPUT
  TSindices   The indices of the timeseries to be inspected
  leadmap     The mapping vector used to remap the leads
  framemap    The mapping vector used to remap the frames
 
  OUTPUT 
  The updated fiducials are stored back in the fidset/fids fields of
  the TS global.
 
  OPTIONS
  .framemap   The framemap
  .leadmap    The leadmap
 
  SEE ALSO - 
</pre>
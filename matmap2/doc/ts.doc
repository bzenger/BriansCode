<big><big> Documentation for the TS directory </big></big><br>Contents: automaticly generated doucmentation <br>Filename: ts.doc <br>Creation date: 04-Jun-2004 <br><br><br> <big><big> Contents </big></big> <br><a href="#ref1">tsAddAudit</a><br><a href="#ref2">tsClear</a><br><a href="#ref3">tsCopyNonData</a><br><a href="#ref4">tsDeal</a><br><a href="#ref5">tsDelete</a><br><a href="#ref6">tsDescription</a><br><a href="#ref7">tsGet</a><br><a href="#ref8">tsInfo</a><br><a href="#ref9">tsInitNew</a><br><a href="#ref10">tsIsBad</a><br><a href="#ref11">tsIsBlank</a><br><a href="#ref12">tsIsInterp</a><br><a href="#ref13">tsLeadColor</a><br><a href="#ref14">tsNew</a><br><a href="#ref15">tsRemap</a><br><a href="#ref16">tsSet</a><br><a href="#ref17">tsSetBad</a><br><a href="#ref18">tsSetBlank</a><br><a href="#ref19">tsSetInterp</a><br><a href="#ref20">tsSliceTS</a><br><a href="#ref21">tsSplitTS</a><br><a href="#ref22">tsSplitTS2</a><br><br><br><a name="ref1"></a><br><big><big>tsAddAudit</big></big><br><br><pre>  FUNCTION      tsAddAudit(TSindices,addaudit)
           TS = tsAddAudit(TS,addaudit)
 
  DESCRIPTION
  This function adds a string to the end of the audit string.
 
  INPUT
  TSindices/TS    The timeseries need to have their audit string altered
  addaudit        The string to append at the end
 
  OUTPUT
  TS		  In case of directly entered data, the new data is returned
 
  SEE ALSO
</pre><a name="ref2"></a><br><big><big>tsClear</big></big><br><br><pre>  FUNCTION tsClear([TSindices])
 
  DESCRIPTION
  Clears the TS-structure if no indices are supplied
  otherwise it just clears the indices specified.
 
  INPUT
  TSindices     The indices of the TS-structures that
                need to be cleared.
 
  OUTPUT -
 
  NOTE
  There is nothing special to this function. Clearing fields
  yourself will work as well. Only this way you can clear
  multiple fields at once directly from an TSindices vector.
 
  SEE ALSO -
</pre><a name="ref3"></a><br><big><big>tsCopyNonData</big></big><br><br><pre>  function tsCopyNonData(source,dest)
  
  This function copies all the non-data structures from
  source to dest. Non-data are all fields except
  potvals, framemap, leadmap, leadinfo
 
  INPUT
   source	source index (may be vectorised)
   dest		destination index
 
  SEE tsCopy
</pre><a name="ref4"></a><br><big><big>tsDeal</big></big><br><br><pre>  FUNCTION tsDeal(TSindices,fieldname,contents)
 
  DESCRIPTION
  This function sets the fields of all the timeseries specified by the
  TSindices array and puts the contents in the field specified by fieldname.
  In this case contents is a cell array specifying the contents for each 
  field individually. If the dimension of the contents array is one the 
  field INSIDE this cellarray is put in each timeseries. 
 
 
  INPUT
  TSindices     Indices of the files involved
  fieldname     Name of field you want to list
  contents    	 cellarray containing the new values 
 
  OUTPUT -
 
  NOTE
  The contents has too be specified as a cell array, in order to avoid confusion.
  For instance if you want to put a cell array in the TS structure, be sure to
  put it again within a cell array as the top cell array structure will be broken
  up into pieces. For direct access of the fields without this cell array thing
  use tsSet()
 
  SEE ALSO tsInfo tsGet tsSet
</pre><a name="ref5"></a><br><big><big>tsDelete</big></big><br><br><pre>  FUNCTION TSindices = tsDelete(number)
  
  DESCRIPTION
  This function deletes entries from the TS-structure
 
  INPUT
  TSindices           positions of cells to be deleted
 
  OUTPUT -
 
  SEE ALSO tsClear tsNew tsInitNew
</pre><a name="ref6"></a><br><big><big>tsDescription</big></big><br><br><pre></pre><a name="ref7"></a><br><big><big>tsGet</big></big><br><br><pre>  FUNCTION contents = tsGet(TSindices,fieldname)
 
  DESCRIPTION
  This function gets the fields of all the TS series 
  specified and puts them in a cellarray. If the field
  is not present an empty array will be given for this
  index. The same will be applied for indices that are 
  out of range.
 
  INPUT
  TSindices     Indices of the files involved
  fieldname     Name of field you want to list
 
  OUTPUT
  contents    	 Cellarray containing the values of the 
                 fields
 
  SEE ALSO tsInfo tsSet tsDeal
</pre><a name="ref8"></a><br><big><big>tsInfo</big></big><br><br><pre>  FUNCTION tsInfo([TSindices],[fieldname])
 
  DESCRIPTION
  This function displays the fields of all the TS series 
  specified. The fieldname is specified by fieldname.
  This function is used to display the information on screen
 
  INPUT
  TSindices     Indices of the files involved
                default: all timeseries
  fieldname     Name of field you want to list
                default: 'label'
 
  OUTPUT
  On the screen a list of the requested contents of the fields is displayed
 
  SEE ALSO tsSet tsGet tsDeal
</pre><a name="ref9"></a><br><big><big>tsInitNew</big></big><br><br><pre>  FUCNTION TSindices = tsInitNew(number)
  
  DESCRIPTION
  This function scans the TS global and locates empty spots, if
  no empty spots are found, places at the end of the list are 
  returned. The function creates an empty TS structure as well.
 
  INPUT
  number         number of new cells needed
 
  OUTPUT
  TSindices      positions of empty cells in the TS cellarray
 
  SEE ALSO tsNew tsDelete tsClear
</pre><a name="ref10"></a><br><big><big>tsIsBad</big></big><br><br><pre>  FUNCTION result = tsIsBad(TSindex,lead)
 
  DESCRIPTION
  This function returns the indices of the bad leads or checks whether a lead is bad.
 
  INPUT
  TSindex          number of timeseries you want to check
  lead             number(s) of lead(s). If none is specified the function 
                   will return the indices of the badleads
 
  OUTPUT
  result           A vector with ones for the leads that are marked as bad and zeros
                   for the non-bad leads.
                   In case no leads are specified all bad lead indices are returned.
 
  SEE ALSO tsIsBlank tsIsInterp
</pre><a name="ref11"></a><br><big><big>tsIsBlank</big></big><br><br><pre>  FUNCTION result = tsIsBlank(TSindex,[lead])
 
  DESCRIPTION
  This function returns the indices of the blank leads or checks whether a lead is blank
 
  INPUT
  TSindex          number of timeseries you want to check
  lead             number(s) of lead(s). If none is specified the function 
                   will return the indices of all the blank leads
 
  OUTPUT
  result           A vector with ones for the leads that are marked as blank.
                   This vector corresponds to the lead vector in dimensions.
                   In case no leads are specified all blank lead indices are returned
 
  SEE ALSO tsIsBad tsIsInterp
</pre><a name="ref12"></a><br><big><big>tsIsInterp</big></big><br><br><pre>  FUNCTION result = tsIsInterp(TSindex,[lead])
 
  DESCRIPTION
  This function returns the indices of the interpolated leads or checks whether a lead is interpolated
 
  INPUT
  TSindex          number of timeseries you want to check
  lead             number(s) of lead(s). If none is specified the function 
                   will return the indices of the interpolated leads
 
  OUTPUT
  result           A vector with ones for the leads that are marked as interpolated. In case no
                   leads are specified all interpolated lead indices are returned
 
  SEE ALSO tsIsBlank tsIsBad
</pre><a name="ref13"></a><br><big><big>tsLeadColor</big></big><br><br><pre>  FUNCTION color = tsLeadColor(TSindex,[leads])
 
  DESCRIPTION
  This functions returns the color for displaying a certain lead. The latter
  depends on the state of the leadinfo array. All bad leads are displayed in
  red, all blank ones in blue and all interpolated ones in green.
 
  INPUT
  TSindex	The timeseries index
  leads         The leads on which color information as to be provided
                default: all leads
 
  OUTPUT
  colors        Cellarray containing th color identifier strings
 
  SEE ALSO -   
</pre><a name="ref14"></a><br><big><big>tsNew</big></big><br><br><pre>  function TSindices = tsNew(number)
  
  This function scan the TS global and locates empty spots, if
  no empty spots are found places at the end of the list are 
  returned
 
  INPUT
   number    number of cells needed
 
  OUTPUT
   TSindices positions of empty cells
 
  SEE tsDelete
</pre><a name="ref15"></a><br><big><big>tsRemap</big></big><br><br><pre>  FUNCTION tsRemap(TSindices,leadmap,[framemap])
        or tsRemap(TSindices,options)
 
  DESCRIPTION
  This function remaps the timeseries data and selectes a certain
  amount of frames or leads. Both can be supplied as a 'map', this map
  is no more than a vector in which the numbers refer to the indices
  of the frames and maps. Only those referred to in the 'map'-vector 
  will be used in the updated timeseries. THis vector can be used as
  well to establish the order in which channels/frames have to be ordered.
 
  INPUT
  TSindices       The indices to the timeseries structures that need to
                  be remappped
  leadmap         A vector specifying which leads to use in the updated 
                  timeseries. To specify all, just put an empty array;
  framemap        A vector specifying which frames to use in the updated
                  timeseries. To specify all, just put an empty array;
 
  OUTPUT
  The TS timeseries will be altered and the number of leads and frames will
  be adjusted. Fiducials are taken care of as well.
 
  OPTIONS
  .framemap    The framemap
  .leadmap   The leadmap
 
  SEE ALSO - 
</pre><a name="ref16"></a><br><big><big>tsSet</big></big><br><br><pre>  FUNCTION tsSet(TSindices,fieldname,contents)
 
  DESCRIPTION
  This function sets the fields of all the TS series 
  specified and puts the contents in there. 
 
  INPUT
  TSindices     Indices of the files involved
  fieldname     Name of field you want to list
  contents    	 field containing the new values 
 
  SEE ALSO tsInfo tsGet tsDeal
</pre><a name="ref17"></a><br><big><big>tsSetBad</big></big><br><br><pre>  FUNCTION TSindices = tsSetBad(TSindices,lead)
           TSdata    = tsSetBad(TSdata,lead)
 
  DESCRIPTION
  This function sets the bad lead markers. This function does not
  make a new copy of the data.
 
  INPUT
  TSindices        number of timeseries
  lead             number(s) of lead(s). 
 
  OUTPUT 
  -
  SEE ALSO tsSetBlank tsSetInterp
</pre><a name="ref18"></a><br><big><big>tsSetBlank</big></big><br><br><pre>  FUNCTION TSindices = tsSetBlank(TSindices,lead)
           TSdata    = tsSetBlank(TSdata,lead)
 
  DESCRIPTION
  This function sets the blank lead markers. This function does not
  make a new copy of the data.
 
  INPUT
  TSindices        number of timeseries
  lead             number(s) of lead(s). 
 
  OUTPUT 
  -
  SEE ALSO tsSetBlank tsSetInterp
</pre><a name="ref19"></a><br><big><big>tsSetInterp</big></big><br><br><pre>  FUNCTION TSindices = tsSetInterp(TSindices,lead)
           TSdata    = tsSetInterp(TSdata,lead)
 
  DESCRIPTION
  This function sets the interpolation lead markers. This function does not
  make a new copy of the data.
 
  INPUT
  TSindices        number of timeseries
  lead             number(s) of lead(s). 
 
  OUTPUT 
  -
  SEE ALSO tsSetBlank tsSetBad
</pre><a name="ref20"></a><br><big><big>tsSliceTS</big></big><br><br><pre>  FUNCTION [newTSindices] = tsSliceTS(TSindices,fstart,fend)
           [newTSindices] = tsSliceTS(TSindices,[fstart:fend])
           newdata = tsSliceTS(data,fstart,fend) 
           newdata = tsSliceTS(data,[fstart:fend]) 
 
  DESCRIPTION
  This function takes a subset of the slices from the data. In works in various modes: 1)
  supplying indices in the TS array will do the operation in the TS array, 2) if you request
  an output argument new entries will be made in the TS array with the sliced data, 3) You can
  supply the timeseries data directly and get back the data directly. 
 
  INPUT
  TSindices/data   You can provide the data directly or as indices of the TS array
  fstart           Frame to start with
  fend             Frame to end with
 
  OUTPUT 
  newTSindices     In case there is an output argument a new data set will be created
                   with the sliced data, otherwise the original TS series will be sliced
  newdata          In case of providing the data directly the sliced data will be put on
                   the output
    
  SEE ALSO tsSplitTS
</pre><a name="ref21"></a><br><big><big>tsSplitTS</big></big><br><br><pre>  FUNCTION [newTSindices1,newTSindices2,...] = tsSplitTS(indices,channels,[newfileext],[nextchannels,nextnewfileext,...])
           OR [Tseries1,Tseries2,..] = tsSplitTS(Tseries,channels,[newfileext],[nextchannels,nextnewfileext,...])
 
</pre><a name="ref22"></a><br><big><big>tsSplitTS2</big></big><br><br><pre>  FUNCTION [newTSindices1,newTSindices2,...] = tsSplitTS(indices,channels,[newfilename],[nextchannels,nextnewfilename,...])
           OR [Tseries1,Tseries2,..] = tsSplitTS(Tseries,channels,[newfilename],[nextchannels,nextnewfilename,...])
 
</pre>